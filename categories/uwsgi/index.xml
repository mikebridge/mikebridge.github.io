<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Uwsgi on Mike Bridge - Dev Notes</title>
    <link>https://mikebridge.github.io/categories/uwsgi/</link>
    <description>Recent content in Uwsgi on Mike Bridge - Dev Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>mike@bridgecanada.com (Mike Bridge)</managingEditor>
    <webMaster>mike@bridgecanada.com (Mike Bridge)</webMaster>
    <lastBuildDate>Mon, 10 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mikebridge.github.io/categories/uwsgi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dockerizing Flask Microservices for Deployment</title>
      <link>https://mikebridge.github.io/post/python-flask-kubernetes-3/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      <author>mike@bridgecanada.com (Mike Bridge)</author>
      <guid>https://mikebridge.github.io/post/python-flask-kubernetes-3/</guid>
      <description>We&amp;rsquo;ve created a simple Python microservice using Flask in Part 1 and set up some simple validation in Part 2. In Part 3 we will package up what we&amp;rsquo;ve built in a Docker container so it can be deployed in Kubernetes.
 Code for this can be found on GitHub. Or you can use this template as a starting point.
 Because Flask doesn&amp;rsquo;t handle parallel execution or networking, we need to deploy Flask inside an application server such as uWSGI, and uWSGI will in turn run inside an http server like nginx.</description>
    </item>
    
  </channel>
</rss>