<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Mike Bridge - Dev Notes</title>
    <link>https://mikebridge.github.io/categories/docker/</link>
    <description>Recent content in Docker on Mike Bridge - Dev Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>mike@bridgecanada.com (Mike Bridge)</managingEditor>
    <webMaster>mike@bridgecanada.com (Mike Bridge)</webMaster>
    <lastBuildDate>Thu, 28 Feb 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mikebridge.github.io/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Compress a Folder in PowerShell for use in Linux</title>
      <link>https://mikebridge.github.io/post/windows-tar-gzip-for-linux/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      <author>mike@bridgecanada.com (Mike Bridge)</author>
      <guid>https://mikebridge.github.io/post/windows-tar-gzip-for-linux/</guid>
      <description>I wasted quite a bit of time trying to find the correct way to zip a folder in PowerShell so that it could later be extracted in a Linux docker container.
TLDR; Turns out the standard unix tar command is now standard-issue in Windows—no need to use PowerShell functions at all:
&amp;nbsp;  tar -cvzf myfile.tgz mydir 
Microsoft added this in 2017—nice!
These didn&amp;rsquo;t work for me:
 PowerShell&amp;rsquo;s Compress-Archive generates Windows path-separators, which Alpine/BusyBox&amp;rsquo;s version of unzip can&amp;rsquo;t handle (though Debian&amp;rsquo;s unzip can).</description>
    </item>
    
  </channel>
</rss>