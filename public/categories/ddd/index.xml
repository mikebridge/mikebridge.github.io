<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ddd on Mike Bridge - Dev Notes</title>
    <link>https://mikebridge.github.io/categories/ddd/</link>
    <description>Recent content in Ddd on Mike Bridge - Dev Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>mike@bridgecanada.com (Mike Bridge)</managingEditor>
    <webMaster>mike@bridgecanada.com (Mike Bridge)</webMaster>
    <lastBuildDate>Wed, 07 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mikebridge.github.io/categories/ddd/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>An Rx Event Aggregator in C#</title>
      <link>https://mikebridge.github.io/post/csharp-domain-event-aggregator/</link>
      <pubDate>Wed, 07 Jun 2017 00:00:00 +0000</pubDate>
      <author>mike@bridgecanada.com (Mike Bridge)</author>
      <guid>https://mikebridge.github.io/post/csharp-domain-event-aggregator/</guid>
      <description>I have a web project that is made up of several modules, each of which generates DDD domain events. Right now my C# project is small and divided into well-defined modules which run in a single process, so using a message queue like Kafka is a bit of overkill. But as the program scales, I may break these modules out and run them as full microservices in their own processes. At that point, I will need to use a real messaging system like Kafka or the Azure Event Hub.</description>
    </item>
    
  </channel>
</rss>